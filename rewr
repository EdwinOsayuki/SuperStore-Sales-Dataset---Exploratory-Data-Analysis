{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "51d992f8",
   "metadata": {},
   "source": [
    "SuperStore Dataset - Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "860c1293",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing the required libabries\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f56a6b5d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Loading dataset into dataframe\n",
    "\n",
    "df = pd.read_csv(r'C:\\Users\\user\\Desktop\\train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "589a8999",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Row ID</th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Ship Date</th>\n",
       "      <th>Ship Mode</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Segment</th>\n",
       "      <th>Country</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Region</th>\n",
       "      <th>Product ID</th>\n",
       "      <th>Category</th>\n",
       "      <th>Sub-Category</th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>08/11/2017</td>\n",
       "      <td>11/11/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-BO-10001798</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Bookcases</td>\n",
       "      <td>Bush Somerset Collection Bookcase</td>\n",
       "      <td>261.9600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>08/11/2017</td>\n",
       "      <td>11/11/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-CH-10000454</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Chairs</td>\n",
       "      <td>Hon Deluxe Fabric Upholstered Stacking Chairs,...</td>\n",
       "      <td>731.9400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>CA-2017-138688</td>\n",
       "      <td>12/06/2017</td>\n",
       "      <td>16/06/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>DV-13045</td>\n",
       "      <td>Darrin Van Huff</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>California</td>\n",
       "      <td>90036.0</td>\n",
       "      <td>West</td>\n",
       "      <td>OFF-LA-10000240</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Labels</td>\n",
       "      <td>Self-Adhesive Address Labels for Typewriters b...</td>\n",
       "      <td>14.6200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>11/10/2016</td>\n",
       "      <td>18/10/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-TA-10000577</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Tables</td>\n",
       "      <td>Bretford CR4500 Series Slim Rectangular Table</td>\n",
       "      <td>957.5775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>11/10/2016</td>\n",
       "      <td>18/10/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>OFF-ST-10000760</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Storage</td>\n",
       "      <td>Eldon Fold 'N Roll Cart System</td>\n",
       "      <td>22.3680</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Row ID        Order ID  Order Date   Ship Date       Ship Mode Customer ID  \\\n",
       "0       1  CA-2017-152156  08/11/2017  11/11/2017    Second Class    CG-12520   \n",
       "1       2  CA-2017-152156  08/11/2017  11/11/2017    Second Class    CG-12520   \n",
       "2       3  CA-2017-138688  12/06/2017  16/06/2017    Second Class    DV-13045   \n",
       "3       4  US-2016-108966  11/10/2016  18/10/2016  Standard Class    SO-20335   \n",
       "4       5  US-2016-108966  11/10/2016  18/10/2016  Standard Class    SO-20335   \n",
       "\n",
       "     Customer Name    Segment        Country             City       State  \\\n",
       "0      Claire Gute   Consumer  United States        Henderson    Kentucky   \n",
       "1      Claire Gute   Consumer  United States        Henderson    Kentucky   \n",
       "2  Darrin Van Huff  Corporate  United States      Los Angeles  California   \n",
       "3   Sean O'Donnell   Consumer  United States  Fort Lauderdale     Florida   \n",
       "4   Sean O'Donnell   Consumer  United States  Fort Lauderdale     Florida   \n",
       "\n",
       "   Postal Code Region       Product ID         Category Sub-Category  \\\n",
       "0      42420.0  South  FUR-BO-10001798        Furniture    Bookcases   \n",
       "1      42420.0  South  FUR-CH-10000454        Furniture       Chairs   \n",
       "2      90036.0   West  OFF-LA-10000240  Office Supplies       Labels   \n",
       "3      33311.0  South  FUR-TA-10000577        Furniture       Tables   \n",
       "4      33311.0  South  OFF-ST-10000760  Office Supplies      Storage   \n",
       "\n",
       "                                        Product Name     Sales  \n",
       "0                  Bush Somerset Collection Bookcase  261.9600  \n",
       "1  Hon Deluxe Fabric Upholstered Stacking Chairs,...  731.9400  \n",
       "2  Self-Adhesive Address Labels for Typewriters b...   14.6200  \n",
       "3      Bretford CR4500 Series Slim Rectangular Table  957.5775  \n",
       "4                     Eldon Fold 'N Roll Cart System   22.3680  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Visualizing the first 5 rows of the dataset\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3ae6a659",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Row ID</th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Ship Date</th>\n",
       "      <th>Ship Mode</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Segment</th>\n",
       "      <th>Country</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Region</th>\n",
       "      <th>Product ID</th>\n",
       "      <th>Category</th>\n",
       "      <th>Sub-Category</th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9795</th>\n",
       "      <td>9796</td>\n",
       "      <td>CA-2017-125920</td>\n",
       "      <td>21/05/2017</td>\n",
       "      <td>28/05/2017</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SH-19975</td>\n",
       "      <td>Sally Hughsby</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>Illinois</td>\n",
       "      <td>60610.0</td>\n",
       "      <td>Central</td>\n",
       "      <td>OFF-BI-10003429</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Binders</td>\n",
       "      <td>Cardinal HOLDit! Binder Insert Strips,Extra St...</td>\n",
       "      <td>3.798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9796</th>\n",
       "      <td>9797</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>OFF-AR-10001374</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Art</td>\n",
       "      <td>BIC Brite Liner Highlighters, Chisel Tip</td>\n",
       "      <td>10.368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9797</th>\n",
       "      <td>9798</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>TEC-PH-10004977</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Phones</td>\n",
       "      <td>GE 30524EE4</td>\n",
       "      <td>235.188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9798</th>\n",
       "      <td>9799</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>TEC-PH-10000912</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Phones</td>\n",
       "      <td>Anker 24W Portable Micro USB Car Charger</td>\n",
       "      <td>26.376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9799</th>\n",
       "      <td>9800</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>TEC-AC-10000487</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Accessories</td>\n",
       "      <td>SanDisk Cruzer 4 GB USB Flash Drive</td>\n",
       "      <td>10.384</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Row ID        Order ID  Order Date   Ship Date       Ship Mode  \\\n",
       "9795    9796  CA-2017-125920  21/05/2017  28/05/2017  Standard Class   \n",
       "9796    9797  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "9797    9798  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "9798    9799  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "9799    9800  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "\n",
       "     Customer ID     Customer Name    Segment        Country     City  \\\n",
       "9795    SH-19975     Sally Hughsby  Corporate  United States  Chicago   \n",
       "9796    CS-12490  Cindy Schnelling  Corporate  United States   Toledo   \n",
       "9797    CS-12490  Cindy Schnelling  Corporate  United States   Toledo   \n",
       "9798    CS-12490  Cindy Schnelling  Corporate  United States   Toledo   \n",
       "9799    CS-12490  Cindy Schnelling  Corporate  United States   Toledo   \n",
       "\n",
       "         State  Postal Code   Region       Product ID         Category  \\\n",
       "9795  Illinois      60610.0  Central  OFF-BI-10003429  Office Supplies   \n",
       "9796      Ohio      43615.0     East  OFF-AR-10001374  Office Supplies   \n",
       "9797      Ohio      43615.0     East  TEC-PH-10004977       Technology   \n",
       "9798      Ohio      43615.0     East  TEC-PH-10000912       Technology   \n",
       "9799      Ohio      43615.0     East  TEC-AC-10000487       Technology   \n",
       "\n",
       "     Sub-Category                                       Product Name    Sales  \n",
       "9795      Binders  Cardinal HOLDit! Binder Insert Strips,Extra St...    3.798  \n",
       "9796          Art           BIC Brite Liner Highlighters, Chisel Tip   10.368  \n",
       "9797       Phones                                        GE 30524EE4  235.188  \n",
       "9798       Phones           Anker 24W Portable Micro USB Car Charger   26.376  \n",
       "9799  Accessories                SanDisk Cruzer 4 GB USB Flash Drive   10.384  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Visualizing the last 5 rows of the dataset\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8db90ec",
   "metadata": {},
   "source": [
    "Listing the attributes available to give a brief information on the dataset.\n",
    "\n",
    "1. Order ID - An identification number assigned to any order placed\n",
    "2. Order Date - Day each order was placed\n",
    "3. Ship Date - Day the order date was dispatched\n",
    "4. Ship Mode- The mode of shipment for each customers\n",
    "5. Customer ID - An identification number assigned to each customer\n",
    "6. Customer Name - The name of each customer\n",
    "7. Segment - Sections the orders were made from\n",
    "8. Country, City, State, Region - Each customer placed the order from\n",
    "9. Product ID, Product Name - Identification number adn name of each product\n",
    "10. Category, Sub-Category- of each product\n",
    "11. Sales - amount made from each order\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "52542d23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Row ID', 'Order ID', 'Order Date', 'Ship Date', 'Ship Mode',\n",
       "       'Customer ID', 'Customer Name', 'Segment', 'Country', 'City', 'State',\n",
       "       'Postal Code', 'Region', 'Product ID', 'Category', 'Sub-Category',\n",
       "       'Product Name', 'Sales'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1d8af7b6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9800 entries, 0 to 9799\n",
      "Data columns (total 18 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   Row ID         9800 non-null   int64  \n",
      " 1   Order ID       9800 non-null   object \n",
      " 2   Order Date     9800 non-null   object \n",
      " 3   Ship Date      9800 non-null   object \n",
      " 4   Ship Mode      9800 non-null   object \n",
      " 5   Customer ID    9800 non-null   object \n",
      " 6   Customer Name  9800 non-null   object \n",
      " 7   Segment        9800 non-null   object \n",
      " 8   Country        9800 non-null   object \n",
      " 9   City           9800 non-null   object \n",
      " 10  State          9800 non-null   object \n",
      " 11  Postal Code    9789 non-null   float64\n",
      " 12  Region         9800 non-null   object \n",
      " 13  Product ID     9800 non-null   object \n",
      " 14  Category       9800 non-null   object \n",
      " 15  Sub-Category   9800 non-null   object \n",
      " 16  Product Name   9800 non-null   object \n",
      " 17  Sales          9800 non-null   float64\n",
      "dtypes: float64(2), int64(1), object(15)\n",
      "memory usage: 1.3+ MB\n"
     ]
    }
   ],
   "source": [
    "#visualizing the number of columns, column labels, column data types,memory usage, range index, and the number of cells in each column (non-null values)\n",
    "\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b8bfdddc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Row ID           9800\n",
       "Order ID         4922\n",
       "Order Date       1230\n",
       "Ship Date        1326\n",
       "Ship Mode           4\n",
       "Customer ID       793\n",
       "Customer Name     793\n",
       "Segment             3\n",
       "Country             1\n",
       "City              529\n",
       "State              49\n",
       "Postal Code       626\n",
       "Region              4\n",
       "Product ID       1861\n",
       "Category            3\n",
       "Sub-Category       17\n",
       "Product Name     1849\n",
       "Sales            5757\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the number of distinct observations availabe in each column\n",
    "\n",
    "df.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "99b1c75a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Row ID</th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>9800.000000</td>\n",
       "      <td>9789.000000</td>\n",
       "      <td>9800.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4900.500000</td>\n",
       "      <td>55273.322403</td>\n",
       "      <td>230.769059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2829.160653</td>\n",
       "      <td>32041.223413</td>\n",
       "      <td>626.651875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1040.000000</td>\n",
       "      <td>0.444000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2450.750000</td>\n",
       "      <td>23223.000000</td>\n",
       "      <td>17.248000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4900.500000</td>\n",
       "      <td>58103.000000</td>\n",
       "      <td>54.490000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7350.250000</td>\n",
       "      <td>90008.000000</td>\n",
       "      <td>210.605000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9800.000000</td>\n",
       "      <td>99301.000000</td>\n",
       "      <td>22638.480000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Row ID   Postal Code         Sales\n",
       "count  9800.000000   9789.000000   9800.000000\n",
       "mean   4900.500000  55273.322403    230.769059\n",
       "std    2829.160653  32041.223413    626.651875\n",
       "min       1.000000   1040.000000      0.444000\n",
       "25%    2450.750000  23223.000000     17.248000\n",
       "50%    4900.500000  58103.000000     54.490000\n",
       "75%    7350.250000  90008.000000    210.605000\n",
       "max    9800.000000  99301.000000  22638.480000"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "999bf534",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Ship Date</th>\n",
       "      <th>Ship Mode</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Segment</th>\n",
       "      <th>Country</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Region</th>\n",
       "      <th>Category</th>\n",
       "      <th>Sub-Category</th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>08/11/2017</td>\n",
       "      <td>11/11/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>South</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Bookcases</td>\n",
       "      <td>Bush Somerset Collection Bookcase</td>\n",
       "      <td>261.9600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>08/11/2017</td>\n",
       "      <td>11/11/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>South</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Chairs</td>\n",
       "      <td>Hon Deluxe Fabric Upholstered Stacking Chairs,...</td>\n",
       "      <td>731.9400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12/06/2017</td>\n",
       "      <td>16/06/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>Darrin Van Huff</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>California</td>\n",
       "      <td>West</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Labels</td>\n",
       "      <td>Self-Adhesive Address Labels for Typewriters b...</td>\n",
       "      <td>14.6200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11/10/2016</td>\n",
       "      <td>18/10/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>South</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Tables</td>\n",
       "      <td>Bretford CR4500 Series Slim Rectangular Table</td>\n",
       "      <td>957.5775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11/10/2016</td>\n",
       "      <td>18/10/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>South</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Storage</td>\n",
       "      <td>Eldon Fold 'N Roll Cart System</td>\n",
       "      <td>22.3680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9795</th>\n",
       "      <td>21/05/2017</td>\n",
       "      <td>28/05/2017</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Sally Hughsby</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>Illinois</td>\n",
       "      <td>Central</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Binders</td>\n",
       "      <td>Cardinal HOLDit! Binder Insert Strips,Extra St...</td>\n",
       "      <td>3.7980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9796</th>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>East</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Art</td>\n",
       "      <td>BIC Brite Liner Highlighters, Chisel Tip</td>\n",
       "      <td>10.3680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9797</th>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>East</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Phones</td>\n",
       "      <td>GE 30524EE4</td>\n",
       "      <td>235.1880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9798</th>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>East</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Phones</td>\n",
       "      <td>Anker 24W Portable Micro USB Car Charger</td>\n",
       "      <td>26.3760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9799</th>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>East</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Accessories</td>\n",
       "      <td>SanDisk Cruzer 4 GB USB Flash Drive</td>\n",
       "      <td>10.3840</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9800 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Order Date   Ship Date       Ship Mode     Customer Name    Segment  \\\n",
       "0     08/11/2017  11/11/2017    Second Class       Claire Gute   Consumer   \n",
       "1     08/11/2017  11/11/2017    Second Class       Claire Gute   Consumer   \n",
       "2     12/06/2017  16/06/2017    Second Class   Darrin Van Huff  Corporate   \n",
       "3     11/10/2016  18/10/2016  Standard Class    Sean O'Donnell   Consumer   \n",
       "4     11/10/2016  18/10/2016  Standard Class    Sean O'Donnell   Consumer   \n",
       "...          ...         ...             ...               ...        ...   \n",
       "9795  21/05/2017  28/05/2017  Standard Class     Sally Hughsby  Corporate   \n",
       "9796  12/01/2016  17/01/2016  Standard Class  Cindy Schnelling  Corporate   \n",
       "9797  12/01/2016  17/01/2016  Standard Class  Cindy Schnelling  Corporate   \n",
       "9798  12/01/2016  17/01/2016  Standard Class  Cindy Schnelling  Corporate   \n",
       "9799  12/01/2016  17/01/2016  Standard Class  Cindy Schnelling  Corporate   \n",
       "\n",
       "            Country             City       State   Region         Category  \\\n",
       "0     United States        Henderson    Kentucky    South        Furniture   \n",
       "1     United States        Henderson    Kentucky    South        Furniture   \n",
       "2     United States      Los Angeles  California     West  Office Supplies   \n",
       "3     United States  Fort Lauderdale     Florida    South        Furniture   \n",
       "4     United States  Fort Lauderdale     Florida    South  Office Supplies   \n",
       "...             ...              ...         ...      ...              ...   \n",
       "9795  United States          Chicago    Illinois  Central  Office Supplies   \n",
       "9796  United States           Toledo        Ohio     East  Office Supplies   \n",
       "9797  United States           Toledo        Ohio     East       Technology   \n",
       "9798  United States           Toledo        Ohio     East       Technology   \n",
       "9799  United States           Toledo        Ohio     East       Technology   \n",
       "\n",
       "     Sub-Category                                       Product Name     Sales  \n",
       "0       Bookcases                  Bush Somerset Collection Bookcase  261.9600  \n",
       "1          Chairs  Hon Deluxe Fabric Upholstered Stacking Chairs,...  731.9400  \n",
       "2          Labels  Self-Adhesive Address Labels for Typewriters b...   14.6200  \n",
       "3          Tables      Bretford CR4500 Series Slim Rectangular Table  957.5775  \n",
       "4         Storage                     Eldon Fold 'N Roll Cart System   22.3680  \n",
       "...           ...                                                ...       ...  \n",
       "9795      Binders  Cardinal HOLDit! Binder Insert Strips,Extra St...    3.7980  \n",
       "9796          Art           BIC Brite Liner Highlighters, Chisel Tip   10.3680  \n",
       "9797       Phones                                        GE 30524EE4  235.1880  \n",
       "9798       Phones           Anker 24W Portable Micro USB Car Charger   26.3760  \n",
       "9799  Accessories                SanDisk Cruzer 4 GB USB Flash Drive   10.3840  \n",
       "\n",
       "[9800 rows x 13 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping the unnecessary column\n",
    "df.drop(['Row ID', 'Order ID', 'Customer ID', 'Product ID', 'Postal Code'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "730af0fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Row ID            0\n",
       "Order ID          0\n",
       "Order Date        0\n",
       "Ship Date         0\n",
       "Ship Mode         0\n",
       "Customer ID       0\n",
       "Customer Name     0\n",
       "Segment           0\n",
       "Country           0\n",
       "City              0\n",
       "State             0\n",
       "Postal Code      11\n",
       "Region            0\n",
       "Product ID        0\n",
       "Category          0\n",
       "Sub-Category      0\n",
       "Product Name      0\n",
       "Sales             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#finding the null values\n",
    "\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "34bd614e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Row ID</th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Ship Date</th>\n",
       "      <th>Ship Mode</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Segment</th>\n",
       "      <th>Country</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Region</th>\n",
       "      <th>Product ID</th>\n",
       "      <th>Category</th>\n",
       "      <th>Sub-Category</th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>08/11/2017</td>\n",
       "      <td>11/11/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-BO-10001798</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Bookcases</td>\n",
       "      <td>Bush Somerset Collection Bookcase</td>\n",
       "      <td>261.9600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>08/11/2017</td>\n",
       "      <td>11/11/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-CH-10000454</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Chairs</td>\n",
       "      <td>Hon Deluxe Fabric Upholstered Stacking Chairs,...</td>\n",
       "      <td>731.9400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>CA-2017-138688</td>\n",
       "      <td>12/06/2017</td>\n",
       "      <td>16/06/2017</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>DV-13045</td>\n",
       "      <td>Darrin Van Huff</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>California</td>\n",
       "      <td>90036.0</td>\n",
       "      <td>West</td>\n",
       "      <td>OFF-LA-10000240</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Labels</td>\n",
       "      <td>Self-Adhesive Address Labels for Typewriters b...</td>\n",
       "      <td>14.6200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>11/10/2016</td>\n",
       "      <td>18/10/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-TA-10000577</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Tables</td>\n",
       "      <td>Bretford CR4500 Series Slim Rectangular Table</td>\n",
       "      <td>957.5775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>11/10/2016</td>\n",
       "      <td>18/10/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>OFF-ST-10000760</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Storage</td>\n",
       "      <td>Eldon Fold 'N Roll Cart System</td>\n",
       "      <td>22.3680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9795</th>\n",
       "      <td>9796</td>\n",
       "      <td>CA-2017-125920</td>\n",
       "      <td>21/05/2017</td>\n",
       "      <td>28/05/2017</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SH-19975</td>\n",
       "      <td>Sally Hughsby</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>Illinois</td>\n",
       "      <td>60610.0</td>\n",
       "      <td>Central</td>\n",
       "      <td>OFF-BI-10003429</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Binders</td>\n",
       "      <td>Cardinal HOLDit! Binder Insert Strips,Extra St...</td>\n",
       "      <td>3.7980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9796</th>\n",
       "      <td>9797</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>OFF-AR-10001374</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Art</td>\n",
       "      <td>BIC Brite Liner Highlighters, Chisel Tip</td>\n",
       "      <td>10.3680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9797</th>\n",
       "      <td>9798</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>TEC-PH-10004977</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Phones</td>\n",
       "      <td>GE 30524EE4</td>\n",
       "      <td>235.1880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9798</th>\n",
       "      <td>9799</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>TEC-PH-10000912</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Phones</td>\n",
       "      <td>Anker 24W Portable Micro USB Car Charger</td>\n",
       "      <td>26.3760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9799</th>\n",
       "      <td>9800</td>\n",
       "      <td>CA-2016-128608</td>\n",
       "      <td>12/01/2016</td>\n",
       "      <td>17/01/2016</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>CS-12490</td>\n",
       "      <td>Cindy Schnelling</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Toledo</td>\n",
       "      <td>Ohio</td>\n",
       "      <td>43615.0</td>\n",
       "      <td>East</td>\n",
       "      <td>TEC-AC-10000487</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Accessories</td>\n",
       "      <td>SanDisk Cruzer 4 GB USB Flash Drive</td>\n",
       "      <td>10.3840</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9789 rows × 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Row ID        Order ID  Order Date   Ship Date       Ship Mode  \\\n",
       "0          1  CA-2017-152156  08/11/2017  11/11/2017    Second Class   \n",
       "1          2  CA-2017-152156  08/11/2017  11/11/2017    Second Class   \n",
       "2          3  CA-2017-138688  12/06/2017  16/06/2017    Second Class   \n",
       "3          4  US-2016-108966  11/10/2016  18/10/2016  Standard Class   \n",
       "4          5  US-2016-108966  11/10/2016  18/10/2016  Standard Class   \n",
       "...      ...             ...         ...         ...             ...   \n",
       "9795    9796  CA-2017-125920  21/05/2017  28/05/2017  Standard Class   \n",
       "9796    9797  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "9797    9798  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "9798    9799  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "9799    9800  CA-2016-128608  12/01/2016  17/01/2016  Standard Class   \n",
       "\n",
       "     Customer ID     Customer Name    Segment        Country             City  \\\n",
       "0       CG-12520       Claire Gute   Consumer  United States        Henderson   \n",
       "1       CG-12520       Claire Gute   Consumer  United States        Henderson   \n",
       "2       DV-13045   Darrin Van Huff  Corporate  United States      Los Angeles   \n",
       "3       SO-20335    Sean O'Donnell   Consumer  United States  Fort Lauderdale   \n",
       "4       SO-20335    Sean O'Donnell   Consumer  United States  Fort Lauderdale   \n",
       "...          ...               ...        ...            ...              ...   \n",
       "9795    SH-19975     Sally Hughsby  Corporate  United States          Chicago   \n",
       "9796    CS-12490  Cindy Schnelling  Corporate  United States           Toledo   \n",
       "9797    CS-12490  Cindy Schnelling  Corporate  United States           Toledo   \n",
       "9798    CS-12490  Cindy Schnelling  Corporate  United States           Toledo   \n",
       "9799    CS-12490  Cindy Schnelling  Corporate  United States           Toledo   \n",
       "\n",
       "           State  Postal Code   Region       Product ID         Category  \\\n",
       "0       Kentucky      42420.0    South  FUR-BO-10001798        Furniture   \n",
       "1       Kentucky      42420.0    South  FUR-CH-10000454        Furniture   \n",
       "2     California      90036.0     West  OFF-LA-10000240  Office Supplies   \n",
       "3        Florida      33311.0    South  FUR-TA-10000577        Furniture   \n",
       "4        Florida      33311.0    South  OFF-ST-10000760  Office Supplies   \n",
       "...          ...          ...      ...              ...              ...   \n",
       "9795    Illinois      60610.0  Central  OFF-BI-10003429  Office Supplies   \n",
       "9796        Ohio      43615.0     East  OFF-AR-10001374  Office Supplies   \n",
       "9797        Ohio      43615.0     East  TEC-PH-10004977       Technology   \n",
       "9798        Ohio      43615.0     East  TEC-PH-10000912       Technology   \n",
       "9799        Ohio      43615.0     East  TEC-AC-10000487       Technology   \n",
       "\n",
       "     Sub-Category                                       Product Name     Sales  \n",
       "0       Bookcases                  Bush Somerset Collection Bookcase  261.9600  \n",
       "1          Chairs  Hon Deluxe Fabric Upholstered Stacking Chairs,...  731.9400  \n",
       "2          Labels  Self-Adhesive Address Labels for Typewriters b...   14.6200  \n",
       "3          Tables      Bretford CR4500 Series Slim Rectangular Table  957.5775  \n",
       "4         Storage                     Eldon Fold 'N Roll Cart System   22.3680  \n",
       "...           ...                                                ...       ...  \n",
       "9795      Binders  Cardinal HOLDit! Binder Insert Strips,Extra St...    3.7980  \n",
       "9796          Art           BIC Brite Liner Highlighters, Chisel Tip   10.3680  \n",
       "9797       Phones                                        GE 30524EE4  235.1880  \n",
       "9798       Phones           Anker 24W Portable Micro USB Car Charger   26.3760  \n",
       "9799  Accessories                SanDisk Cruzer 4 GB USB Flash Drive   10.3840  \n",
       "\n",
       "[9789 rows x 18 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping null values\n",
    "\n",
    "df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "aec65768",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Row ID</th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Ship Date</th>\n",
       "      <th>Ship Mode</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Segment</th>\n",
       "      <th>Country</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Region</th>\n",
       "      <th>Product ID</th>\n",
       "      <th>Category</th>\n",
       "      <th>Sub-Category</th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>2017-08-11</td>\n",
       "      <td>2017-11-11</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-BO-10001798</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Bookcases</td>\n",
       "      <td>Bush Somerset Collection Bookcase</td>\n",
       "      <td>261.9600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>2017-08-11</td>\n",
       "      <td>2017-11-11</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-CH-10000454</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Chairs</td>\n",
       "      <td>Hon Deluxe Fabric Upholstered Stacking Chairs,...</td>\n",
       "      <td>731.9400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>CA-2017-138688</td>\n",
       "      <td>2017-12-06</td>\n",
       "      <td>2017-06-16</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>DV-13045</td>\n",
       "      <td>Darrin Van Huff</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>California</td>\n",
       "      <td>90036.0</td>\n",
       "      <td>West</td>\n",
       "      <td>OFF-LA-10000240</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Labels</td>\n",
       "      <td>Self-Adhesive Address Labels for Typewriters b...</td>\n",
       "      <td>14.6200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>2016-11-10</td>\n",
       "      <td>2016-10-18</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-TA-10000577</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Tables</td>\n",
       "      <td>Bretford CR4500 Series Slim Rectangular Table</td>\n",
       "      <td>957.5775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>2016-11-10</td>\n",
       "      <td>2016-10-18</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>OFF-ST-10000760</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Storage</td>\n",
       "      <td>Eldon Fold 'N Roll Cart System</td>\n",
       "      <td>22.3680</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Row ID        Order ID Order Date  Ship Date       Ship Mode Customer ID  \\\n",
       "0       1  CA-2017-152156 2017-08-11 2017-11-11    Second Class    CG-12520   \n",
       "1       2  CA-2017-152156 2017-08-11 2017-11-11    Second Class    CG-12520   \n",
       "2       3  CA-2017-138688 2017-12-06 2017-06-16    Second Class    DV-13045   \n",
       "3       4  US-2016-108966 2016-11-10 2016-10-18  Standard Class    SO-20335   \n",
       "4       5  US-2016-108966 2016-11-10 2016-10-18  Standard Class    SO-20335   \n",
       "\n",
       "     Customer Name    Segment        Country             City       State  \\\n",
       "0      Claire Gute   Consumer  United States        Henderson    Kentucky   \n",
       "1      Claire Gute   Consumer  United States        Henderson    Kentucky   \n",
       "2  Darrin Van Huff  Corporate  United States      Los Angeles  California   \n",
       "3   Sean O'Donnell   Consumer  United States  Fort Lauderdale     Florida   \n",
       "4   Sean O'Donnell   Consumer  United States  Fort Lauderdale     Florida   \n",
       "\n",
       "   Postal Code Region       Product ID         Category Sub-Category  \\\n",
       "0      42420.0  South  FUR-BO-10001798        Furniture    Bookcases   \n",
       "1      42420.0  South  FUR-CH-10000454        Furniture       Chairs   \n",
       "2      90036.0   West  OFF-LA-10000240  Office Supplies       Labels   \n",
       "3      33311.0  South  FUR-TA-10000577        Furniture       Tables   \n",
       "4      33311.0  South  OFF-ST-10000760  Office Supplies      Storage   \n",
       "\n",
       "                                        Product Name     Sales  \n",
       "0                  Bush Somerset Collection Bookcase  261.9600  \n",
       "1  Hon Deluxe Fabric Upholstered Stacking Chairs,...  731.9400  \n",
       "2  Self-Adhesive Address Labels for Typewriters b...   14.6200  \n",
       "3      Bretford CR4500 Series Slim Rectangular Table  957.5775  \n",
       "4                     Eldon Fold 'N Roll Cart System   22.3680  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#converting datecolumns to pandas datetime\n",
    "\n",
    "df[\"Order Date\"] = pd.to_datetime(df[\"Order Date\"])\n",
    "\n",
    "df[\"Ship Date\"] = pd.to_datetime(df[\"Ship Date\"])\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "cc05b594",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Row ID</th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Ship Date</th>\n",
       "      <th>Ship Mode</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Segment</th>\n",
       "      <th>Country</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Region</th>\n",
       "      <th>Product ID</th>\n",
       "      <th>Category</th>\n",
       "      <th>Sub-Category</th>\n",
       "      <th>Product Name</th>\n",
       "      <th>Sales</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>2017-08-11</td>\n",
       "      <td>2017-11-11</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-BO-10001798</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Bookcases</td>\n",
       "      <td>Bush Somerset Collection Bookcase</td>\n",
       "      <td>261.9600</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>CA-2017-152156</td>\n",
       "      <td>2017-08-11</td>\n",
       "      <td>2017-11-11</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>CG-12520</td>\n",
       "      <td>Claire Gute</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Henderson</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>42420.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-CH-10000454</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Chairs</td>\n",
       "      <td>Hon Deluxe Fabric Upholstered Stacking Chairs,...</td>\n",
       "      <td>731.9400</td>\n",
       "      <td>2017</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>CA-2017-138688</td>\n",
       "      <td>2017-12-06</td>\n",
       "      <td>2017-06-16</td>\n",
       "      <td>Second Class</td>\n",
       "      <td>DV-13045</td>\n",
       "      <td>Darrin Van Huff</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>United States</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>California</td>\n",
       "      <td>90036.0</td>\n",
       "      <td>West</td>\n",
       "      <td>OFF-LA-10000240</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Labels</td>\n",
       "      <td>Self-Adhesive Address Labels for Typewriters b...</td>\n",
       "      <td>14.6200</td>\n",
       "      <td>2017</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>2016-11-10</td>\n",
       "      <td>2016-10-18</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>FUR-TA-10000577</td>\n",
       "      <td>Furniture</td>\n",
       "      <td>Tables</td>\n",
       "      <td>Bretford CR4500 Series Slim Rectangular Table</td>\n",
       "      <td>957.5775</td>\n",
       "      <td>2016</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>US-2016-108966</td>\n",
       "      <td>2016-11-10</td>\n",
       "      <td>2016-10-18</td>\n",
       "      <td>Standard Class</td>\n",
       "      <td>SO-20335</td>\n",
       "      <td>Sean O'Donnell</td>\n",
       "      <td>Consumer</td>\n",
       "      <td>United States</td>\n",
       "      <td>Fort Lauderdale</td>\n",
       "      <td>Florida</td>\n",
       "      <td>33311.0</td>\n",
       "      <td>South</td>\n",
       "      <td>OFF-ST-10000760</td>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>Storage</td>\n",
       "      <td>Eldon Fold 'N Roll Cart System</td>\n",
       "      <td>22.3680</td>\n",
       "      <td>2016</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Row ID        Order ID Order Date  Ship Date       Ship Mode Customer ID  \\\n",
       "0       1  CA-2017-152156 2017-08-11 2017-11-11    Second Class    CG-12520   \n",
       "1       2  CA-2017-152156 2017-08-11 2017-11-11    Second Class    CG-12520   \n",
       "2       3  CA-2017-138688 2017-12-06 2017-06-16    Second Class    DV-13045   \n",
       "3       4  US-2016-108966 2016-11-10 2016-10-18  Standard Class    SO-20335   \n",
       "4       5  US-2016-108966 2016-11-10 2016-10-18  Standard Class    SO-20335   \n",
       "\n",
       "     Customer Name    Segment        Country             City       State  \\\n",
       "0      Claire Gute   Consumer  United States        Henderson    Kentucky   \n",
       "1      Claire Gute   Consumer  United States        Henderson    Kentucky   \n",
       "2  Darrin Van Huff  Corporate  United States      Los Angeles  California   \n",
       "3   Sean O'Donnell   Consumer  United States  Fort Lauderdale     Florida   \n",
       "4   Sean O'Donnell   Consumer  United States  Fort Lauderdale     Florida   \n",
       "\n",
       "   Postal Code Region       Product ID         Category Sub-Category  \\\n",
       "0      42420.0  South  FUR-BO-10001798        Furniture    Bookcases   \n",
       "1      42420.0  South  FUR-CH-10000454        Furniture       Chairs   \n",
       "2      90036.0   West  OFF-LA-10000240  Office Supplies       Labels   \n",
       "3      33311.0  South  FUR-TA-10000577        Furniture       Tables   \n",
       "4      33311.0  South  OFF-ST-10000760  Office Supplies      Storage   \n",
       "\n",
       "                                        Product Name     Sales  Year  Month  \n",
       "0                  Bush Somerset Collection Bookcase  261.9600  2017      8  \n",
       "1  Hon Deluxe Fabric Upholstered Stacking Chairs,...  731.9400  2017      8  \n",
       "2  Self-Adhesive Address Labels for Typewriters b...   14.6200  2017     12  \n",
       "3      Bretford CR4500 Series Slim Rectangular Table  957.5775  2016     11  \n",
       "4                     Eldon Fold 'N Roll Cart System   22.3680  2016     11  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Year'] = pd.DatetimeIndex(df['Order Date']).year\n",
    "df['Month'] = pd.DatetimeIndex(df['Order Date']).month\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "12817c22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Sales'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAWAAAAEGCAYAAABbzE8LAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAOr0lEQVR4nO3de2xcZ1rH8d/jW9Jtuts2t1YmYmrGWilL0NJaCxWwKqJlk7SiIEVi/0okUIMEpOEPtCrpgJtqZBUkLompQKlAmy6rbbnsht2qDaSwCUJC23VQU/eikqnr1TZtNok3u216SRr74Y9z7IwnM/bY8TnP2P5+JMvjd8553+d9dfLL8ZmZY3N3AQDy1xZdAAAsVwQwAAQhgAEgCAEMAEEIYAAI0jGXjdesWeOFQiGjUgBgaTp+/Pg5d19b2z6nAC4UChoaGlq4qgBgGTCz79Vr5xIEAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEIQABoAgBDAABCGAASAIAQwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABB5vQ34eZrcHBQx44dkyR1d3erWCxq165deQwNAC0rlwCuVCo6e25Mau/Q2fPv5jEkALS8XAJYktTeofFPrM5tOABodVwDBoAgBDAABCGAASAIAQwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEIQABoAgBDAABCGAASAIAQwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAILkE8KlTp6SJ8brPDQ4OanBwMI8yAKCldOQxyIcffii5132uUqnkUQIAtBwuQQBAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEIQABoAgBDAABCGAASAIAQwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgSEd0ASdOnJAk3XXXXbGFpNatW6eBgQENDAxoZGREXV1damtr04YNG/TYY4/p/Pnz2r17tx599FE9/vjjevPNN/XAAw/oiSee0Pr163X69GmZmTo7O2Vm6u7uVnt7uzo7O7Vt2zaVy2WVSiUdOnRIDz74oPbv36/+/v6pfvft26disThrnWNjY9q7d6/6+/u1evXqeW8z0z7VNd10001X9VXbf73xGtUwW21ZzS8PrVpXMxZz7VnJck04A65x5swZlctljYyMSJIuXbqkjz76SCdPntSTTz6pcrms999/X/39/RoZGZG768CBA3J3nT59WpLk7rp06ZIuXryokZERnTx5Uq+++qoGBgY0MTGhgYEBDQ8Pq1wua3h4eFq/5XK5qToPHjw4te+1bDPTPtU11eurtq2ZbZqtLav55aFV62rGYq49K1muSWgAt8pZb63R0dG67c8888zUcxcuXJhzv5cvX5767u4aHR2Vu+vZZ5+d6nd0dFSVSmXGfsbGxnT48GG5uw4fPqyxsbF5bTPTPrU1Pffcc9P6qu2/UqlcNV6jGmarLav55aFV62rGYq49K1mvSe4B3PbRu6pUKtq9e3feQ1+z8fHxTPr9+OOPp/0821nwwYMHNTExMVVTvf+Zm9lmpn1qa5r8ebKv2v7L5fJV4zWqYbbasppfHlq1rmYs5tqzkvWazBrAZrbTzIbMbOjs2bMLOjjqa3QGPun555+fdjZ95MiReW0z0z6NTPZV2//o6OhV4zWqYbbasppfHlq1rmYs5tqzkvWazBrA7n7A3fvcvW/t2rXXPODEyk+qWCxq375919zXUlUoFGZ8/u6771ZHR/L6aUdHh+655555bTPTPo1M9lXbf6FQuGq8RjXMVltW88tDq9bVjMVce1ayXhNehJuD9vb2TPrt7Oyc9nOpVJpx+x07dqitrW2qpu3bt89rm5n2qa1p8ufJvmr7L5VKV43XqIbZastqfnlo1bqasZhrz0rWaxIawEePHo0cvqFGZ6D33Xff1HOrVq2ac7/V/5OamQqFgsxMW7duneq3UCjM+ja01atXa/PmzTIzbd68ue5bY5rZZqZ9amvasmXLtL5q+y8Wi1eN16iG2WrLan55aNW6mrGYa89K1mvCGXCNdevWqVQqqaenR5LU1dWllStXqre3V9u3b1epVNL111+vvXv3qqenR2amnTt3ysx0yy23SJLMTF1dXVqxYoV6enrU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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#visualizing outliers in sales record using a boxplot, to know if there has been an error in record\n",
    "\n",
    "sns.boxplot(x = df['Sales'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "fc43a738",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#visualizing the relationship between varaibles using an heatmap\n",
    "plt.figure(figsize = (20,10))\n",
    "data = df.corr()\n",
    "\n",
    "sns.heatmap(data, annot= True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "d0a4bff7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2261536.7827000003"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Finding the total revenue generated by the superstore\n",
    "\n",
    "df[\"Sales\"].sum() \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "bd74ba72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11</td>\n",
       "      <td>268768.7885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12</td>\n",
       "      <td>246266.5152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9</td>\n",
       "      <td>245155.0671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>212256.1344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>207601.7939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10</td>\n",
       "      <td>183851.9562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>5</td>\n",
       "      <td>166000.7467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>159472.5865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>155990.9154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4</td>\n",
       "      <td>142984.2481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>6</td>\n",
       "      <td>142034.7713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>131153.2594</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Month        Sales\n",
       "0      11  268768.7885\n",
       "1      12  246266.5152\n",
       "2       9  245155.0671\n",
       "3       3  212256.1344\n",
       "4       8  207601.7939\n",
       "5      10  183851.9562\n",
       "6       5  166000.7467\n",
       "7       7  159472.5865\n",
       "8       1  155990.9154\n",
       "9       4  142984.2481\n",
       "10      6  142034.7713\n",
       "11      2  131153.2594"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthly_sales = df.groupby('Month').sum().sort_values('Sales', ascending = False)\n",
    "\n",
    "monthly_sales = monthly_sales[[\"Sales\"]]\n",
    "\n",
    "monthly_sales.reset_index(inplace=True)\n",
    "monthly_sales "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "11a18a61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.bar(monthly_sales[\"Month\"],monthly_sales[\"Sales\"])\n",
    "plt.xlabel('Months', size = 20)\n",
    "plt.ylabel('Sales', size = 20)\n",
    "plt.title('Sales per Month')\n",
    "plt.xticks(fontsize = 10, rotation = 90)\n",
    "plt.yticks(fontsize = 10) \n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "49d363c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2018</td>\n",
       "      <td>722052.0192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2017</td>\n",
       "      <td>600192.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2015</td>\n",
       "      <td>479856.2081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2016</td>\n",
       "      <td>459436.0054</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year        Sales\n",
       "0  2018  722052.0192\n",
       "1  2017  600192.5500\n",
       "2  2015  479856.2081\n",
       "3  2016  459436.0054"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "yearly_sales = df.groupby('Year').sum().sort_values('Sales', ascending = False)\n",
    "\n",
    "yearly_sales = yearly_sales[[\"Sales\"]]\n",
    "\n",
    "yearly_sales.reset_index(inplace=True)\n",
    "yearly_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "db9fc143",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x = \"Year\", y = \"Sales\", data  = yearly_sales)\n",
    "\n",
    "plt.xlabel(\"Year\", size = 20)\n",
    "\n",
    "plt.ylabel(\"Sales\", size = 20)\n",
    "\n",
    "plt.title(\"Sales based on Year\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "533f6617",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(df[\"Segment\"],df[\"Sales\"])\n",
    "plt.xlabel('Segment', size = 20)\n",
    "plt.ylabel('Sales', size = 20)\n",
    "plt.title('Sales per Segment')\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "6aa93a6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New York City</td>\n",
       "      <td>252462.5470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>173420.1810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Seattle</td>\n",
       "      <td>116106.3220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>San Francisco</td>\n",
       "      <td>109041.1200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Philadelphia</td>\n",
       "      <td>108841.7490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Houston</td>\n",
       "      <td>63956.1428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Chicago</td>\n",
       "      <td>47820.1330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>San Diego</td>\n",
       "      <td>47521.0290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Jacksonville</td>\n",
       "      <td>44713.1830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Detroit</td>\n",
       "      <td>42446.9440</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            City        Sales\n",
       "0  New York City  252462.5470\n",
       "1    Los Angeles  173420.1810\n",
       "2        Seattle  116106.3220\n",
       "3  San Francisco  109041.1200\n",
       "4   Philadelphia  108841.7490\n",
       "5        Houston   63956.1428\n",
       "6        Chicago   47820.1330\n",
       "7      San Diego   47521.0290\n",
       "8   Jacksonville   44713.1830\n",
       "9        Detroit   42446.9440"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "city_sales = df.groupby('City').sum().sort_values('Sales', ascending = False).head(10)\n",
    "\n",
    "city_sales = city_sales[[\"Sales\"]]\n",
    "\n",
    "city_sales.reset_index(inplace=True)\n",
    "city_sales.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "17d7bb39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "city_sales.plot(kind = 'bar')\n",
    "plt.xlabel(\"Cities\",fontsize=15)  \n",
    "\n",
    "plt.ylabel(\"Revenue\",fontsize=15)\n",
    "\n",
    "plt.xticks(fontsize=12, rotation=90)\n",
    "\n",
    "plt.yticks(fontsize=12)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "980fbcae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>California</td>\n",
       "      <td>446306.4635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>New York</td>\n",
       "      <td>306361.1470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Texas</td>\n",
       "      <td>168572.5322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Washington</td>\n",
       "      <td>135206.8500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Pennsylvania</td>\n",
       "      <td>116276.6500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Florida</td>\n",
       "      <td>88436.5320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Illinois</td>\n",
       "      <td>79236.5170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Michigan</td>\n",
       "      <td>76136.0740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Ohio</td>\n",
       "      <td>75130.3500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Virginia</td>\n",
       "      <td>70636.7200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          State        Sales\n",
       "0    California  446306.4635\n",
       "1      New York  306361.1470\n",
       "2         Texas  168572.5322\n",
       "3    Washington  135206.8500\n",
       "4  Pennsylvania  116276.6500\n",
       "5       Florida   88436.5320\n",
       "6      Illinois   79236.5170\n",
       "7      Michigan   76136.0740\n",
       "8          Ohio   75130.3500\n",
       "9      Virginia   70636.7200"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "state_sales = df.groupby('State').sum().sort_values('Sales', ascending = False).head(10)\n",
    "\n",
    "state_sales = state_sales[[\"Sales\"]]\n",
    "\n",
    "state_sales.reset_index(inplace=True)\n",
    "state_sales.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "19768043",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "state_sales.plot(kind = 'bar')\n",
    "plt.xlabel(\"Cities\",fontsize=15)  \n",
    "\n",
    "plt.ylabel(\"Revenue\",fontsize=15)\n",
    "\n",
    "plt.xticks(fontsize=12, rotation=90)\n",
    "\n",
    "plt.yticks(fontsize=12)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "0df4f5ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Region</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>West</td>\n",
       "      <td>710219.6845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>East</td>\n",
       "      <td>669518.7260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Central</td>\n",
       "      <td>492646.9132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>South</td>\n",
       "      <td>389151.4590</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Region        Sales\n",
       "0     West  710219.6845\n",
       "1     East  669518.7260\n",
       "2  Central  492646.9132\n",
       "3    South  389151.4590"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "region_sales = df.groupby('Region').sum().sort_values('Sales', ascending = False)\n",
    "\n",
    "region_sales = region_sales[[\"Sales\"]]\n",
    "\n",
    "region_sales.reset_index(inplace=True)\n",
    "region_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "a1bede3f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "region_sales.plot(kind = 'bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "ecc5c9f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Category</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Technology</td>\n",
       "      <td>827455.8730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Furniture</td>\n",
       "      <td>728658.5757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Office Supplies</td>\n",
       "      <td>705422.3340</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Category        Sales\n",
       "0       Technology  827455.8730\n",
       "1        Furniture  728658.5757\n",
       "2  Office Supplies  705422.3340"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categories_sales = df.groupby('Category').sum().sort_values('Sales', ascending = False)\n",
    "\n",
    "categories_sales = categories_sales[[\"Sales\"]]\n",
    "\n",
    "categories_sales.reset_index(inplace=True)\n",
    "categories_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "d16f9b4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "categories_sales.plot(kind = 'bar')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
